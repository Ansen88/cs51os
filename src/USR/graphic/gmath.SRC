; src\USR\graphic\gmath.SRC generated from: src\USR\graphic\gmath.c
; COMPILER INVOKED BY:
;        d:\Keil1\C51\BIN\C51.EXE src\USR\graphic\gmath.c LARGE ROM(COMPACT) BROWSE MODP2 INCDIR(.\inc) SRC DEBUG OBJECTEXTEND PRINT(.\gmath.lst) OBJECT(.\output\gmath.obj)


NAME	GMATH

?PR?_clr_buf?GMATH   SEGMENT CODE INBLOCK 
?PR?_l_math?GMATH    SEGMENT CODE INBLOCK 
?XD?_l_math?GMATH    SEGMENT XDATA OVERLAYABLE 
?PR?_c_math?GMATH    SEGMENT CODE INBLOCK 
?XD?_c_math?GMATH    SEGMENT XDATA OVERLAYABLE 
?DT?_l_math?GMATH    SEGMENT DATA OVERLAYABLE 
?DT?_c_math?GMATH    SEGMENT DATA OVERLAYABLE 
	EXTRN	CODE (_framebuf_update)
	EXTRN	XDATA (?_framebuf_update?BYTE)
	EXTRN	CODE (_screen_update)
	EXTRN	XDATA (?_screen_update?BYTE)
	EXTRN	XDATA (tmp_buf)
	PUBLIC	_c_math
	PUBLIC	?_l_math?BYTE
	PUBLIC	_l_math

	RSEG  ?XD?_c_math?GMATH
?_c_math?BYTE:
       l_y2?266:   DS   1
	ORG  1
       last?268:   DS   1

	RSEG  ?XD?_l_math?GMATH
?_l_math?BYTE:
         x0?142:   DS   1
	ORG  1
         y0?143:   DS   1
	ORG  2
          x?144:   DS   1
	ORG  3
          y?145:   DS   1
	ORG  4
         xn?148:   DS   1
	ORG  5
         yn?149:   DS   1
	ORG  6
        x_l?150:   DS   1
	ORG  7
        y_l?151:   DS   1
	ORG  8
          z?152:   DS   1
	ORG  9
         x1?153:   DS   1
	ORG  10
         y1?154:   DS   1
	ORG  11
       last?155:   DS   1
	ORG  12
        l_y?156:   DS   1
	ORG  13
          i?157:   DS   1
	ORG  14
        dir?158:   DS   1

	RSEG  ?DT?_l_math?GMATH
    residue?146:   DS   1

	RSEG  ?DT?_l_math?GMATH
      carry?147:   DS   1

	RSEG  ?DT?_c_math?GMATH
         r2?262:   DS   1

	RSEG  ?DT?_c_math?GMATH
      l_xn2?263:   DS   1

	RSEG  ?DT?_c_math?GMATH
       tmp2?264:   DS   1
; #include "graphic.h"
; 
; #define	ABSUB(x,y)	(((x)>(y))?((x)-(y)):((y)-(x)))
; 
; extern unsigned char xdata tmp_buf[32];
; 
; /*
; static unsigned char absub(unsigned char x,unsigned char y)
; {
; 	return ((x>y)?(x-y):(y-x));
; }
; */
; 
; static void clr_buf(unsigned char num)

	RSEG  ?PR?_clr_buf?GMATH
_clr_buf:
	USING	0
			; SOURCE LINE # 14
;---- Variable 'num?040' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 15
; 	unsigned char i;
; 	for(i=0;i<num;i++)
			; SOURCE LINE # 17
;---- Variable 'i?041' assigned to Register 'R6' ----
	CLR  	A
	MOV  	R6,A
?C0001:
	MOV  	A,R6
	CLR  	C
	SUBB 	A,R7
	JNC  	?C0004
; 	{
			; SOURCE LINE # 18
; 		tmp_buf[i]=0;	
			; SOURCE LINE # 19
	MOV  	A,#LOW (tmp_buf)
	ADD  	A,R6
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf)
	MOV  	DPH,A
	CLR  	A
	MOVX 	@DPTR,A
; 	}
			; SOURCE LINE # 20
	INC  	R6
	SJMP 	?C0001
; }
			; SOURCE LINE # 21
?C0004:
	RET  	
; END OF _clr_buf

; 
; void l_math(unsigned char x0,unsigned char y0,unsigned char x,unsigned char y)

	RSEG  ?PR?_l_math?GMATH
_l_math:
	USING	0
			; SOURCE LINE # 23
	MOV  	DPTR,#x0?142
	MOV  	A,R7
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,R5
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,R3
	MOVX 	@DPTR,A
; {
			; SOURCE LINE # 24
; 	unsigned char data residue,carry;
; 	unsigned char xdata xn,yn,x_l,y_l,z,x1,y1;
; 	unsigned char xdata last,l_y,i,dir;
; 
; 	x_l=x-x0;
			; SOURCE LINE # 29
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R6,A
	CLR  	C
	MOV  	A,R3
	SUBB 	A,R6
	MOV  	DPTR,#x_l?150
	MOVX 	@DPTR,A
; 	x1=x0;
			; SOURCE LINE # 30
	MOV  	DPTR,#x1?153
	MOV  	A,R6
	MOVX 	@DPTR,A
; 	y1=y0;
			; SOURCE LINE # 31
	MOV  	DPTR,#y0?143
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#y1?154
	MOVX 	@DPTR,A
; 	y_l=(y>y0)?(y-y0):(y0-y);
			; SOURCE LINE # 32
	MOV  	DPTR,#y?145
	MOVX 	A,@DPTR
	MOV  	R6,A
	SETB 	C
	SUBB 	A,R7
	JC   	?C0005
	MOV  	A,R6
	SUBB 	A,R7
	MOV  	R7,A
	SJMP 	?C0006
?C0005:
	MOV  	DPTR,#y?145
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#y0?143
	MOVX 	A,@DPTR
	CLR  	C
	SUBB 	A,R7
	MOV  	R7,A
?C0006:
	MOV  	DPTR,#y_l?151
	MOV  	A,R7
	MOVX 	@DPTR,A
; 	dir=(y>y0)?1:0;
			; SOURCE LINE # 33
	MOV  	DPTR,#y0?143
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#y?145
	MOVX 	A,@DPTR
	SETB 	C
	SUBB 	A,R7
	JC   	?C0007
	MOV  	R7,#01H
	SJMP 	?C0008
?C0007:
	MOV  	R7,#00H
?C0008:
	MOV  	DPTR,#dir?158
	MOV  	A,R7
	MOVX 	@DPTR,A
; 	z=x0%8;
			; SOURCE LINE # 34
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	ANL  	A,#07H
	MOV  	DPTR,#z?152
	MOVX 	@DPTR,A
; 	last=0x80>>z;
			; SOURCE LINE # 35
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	A,#080H
	MOV  	R0,AR7
	INC  	R0
	SJMP 	?C0060
?C0059:
	CLR  	C
	RRC  	A
?C0060:
	DJNZ 	R0,?C0059
	MOV  	DPTR,#last?155
	MOVX 	@DPTR,A
; 	
; 	clr_buf(8);
			; SOURCE LINE # 37
	MOV  	R7,#08H
	LCALL	_clr_buf
; 	if(x_l==y_l)
			; SOURCE LINE # 38
	MOV  	DPTR,#y_l?151
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#x_l?150
	MOVX 	A,@DPTR
	XRL  	A,R7
	JZ   	$ + 4H
	AJMP 	?C0009
; 	{
			; SOURCE LINE # 39
; 		l_y=0x80;
			; SOURCE LINE # 40
	MOV  	DPTR,#l_y?156
	MOV  	A,#080H
	MOVX 	@DPTR,A
; 		residue=(x0/8);
			; SOURCE LINE # 41
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	RRC  	A
	RRC  	A
	RRC  	A
	ANL  	A,#01FH
	MOV  	residue?146,A
; 
; 		if(z)
			; SOURCE LINE # 43
	MOV  	DPTR,#z?152
	MOVX 	A,@DPTR
	MOV  	R7,A
	JZ   	?C0010
; 		{
			; SOURCE LINE # 44
; 			residue++;
			; SOURCE LINE # 45
	INC  	residue?146
; 			z=7-z;
			; SOURCE LINE # 46
	CLR  	C
	MOV  	A,#07H
	SUBB 	A,R7
	MOVX 	@DPTR,A
; 
; 			for(i=0;last;i++)
			; SOURCE LINE # 48
	CLR  	A
	MOV  	DPTR,#i?157
	MOVX 	@DPTR,A
?C0011:
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	MOV  	R7,A
	JZ   	?C0012
; 			{
			; SOURCE LINE # 49
; 				tmp_buf[i]=last;
			; SOURCE LINE # 50
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	ADD  	A,#LOW (tmp_buf)
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf)
	MOV  	DPH,A
	MOV  	A,R7
	MOVX 	@DPTR,A
; 				last=last>>1;
			; SOURCE LINE # 51
	MOV  	A,R7
	CLR  	C
	RRC  	A
	MOV  	DPTR,#last?155
	MOVX 	@DPTR,A
; 			}
			; SOURCE LINE # 52
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	INC  	A
	MOVX 	@DPTR,A
	SJMP 	?C0011
?C0012:
; 			framebuf_update(x0,y0,x0+z,y0+z,tmp_buf);
			; SOURCE LINE # 53
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R7,A
	PUSH 	AR7
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	DPTR,#z?152
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	A,R7
	ADD  	A,R6
	MOV  	R3,A
	MOV  	A,R5
	ADD  	A,R6
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
	POP  	AR7
	LCALL	_framebuf_update
; 		}
			; SOURCE LINE # 54
?C0010:
; 
; 		for(i=0;i<8;i++)
			; SOURCE LINE # 56
	CLR  	A
	MOV  	DPTR,#i?157
	MOVX 	@DPTR,A
?C0014:
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	MOV  	R7,A
	CLR  	C
	SUBB 	A,#08H
	JNC  	?C0015
; 		{
			; SOURCE LINE # 57
; 			tmp_buf[i]=l_y;
			; SOURCE LINE # 58
	MOV  	DPTR,#l_y?156
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	A,#LOW (tmp_buf)
	ADD  	A,R7
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf)
	MOV  	DPH,A
	MOV  	A,R6
	MOVX 	@DPTR,A
; 			l_y=l_y>>1;
			; SOURCE LINE # 59
	MOV  	A,R6
	CLR  	C
	RRC  	A
	MOV  	DPTR,#l_y?156
	MOVX 	@DPTR,A
; 		}
			; SOURCE LINE # 60
	INC  	DPTR
	MOVX 	A,@DPTR
	INC  	A
	MOVX 	@DPTR,A
	SJMP 	?C0014
?C0015:
; 		
; 		residue=residue<<3;
			; SOURCE LINE # 62
	MOV  	A,residue?146
	RLC  	A
	RLC  	A
	RLC  	A
	ANL  	A,#0F8H
	MOV  	residue?146,A
; 		x0=residue;
			; SOURCE LINE # 63
	MOV  	DPTR,#x0?142
	MOVX 	@DPTR,A
; 		y0=x0-x1+y0;
			; SOURCE LINE # 64
	MOV  	DPTR,#x1?153
	MOVX 	A,@DPTR
	MOV  	R7,A
	CLR  	C
	MOV  	A,residue?146
	SUBB 	A,R7
	MOV  	R7,A
	MOV  	DPTR,#y0?143
	MOVX 	A,@DPTR
	ADD  	A,R7
	MOVX 	@DPTR,A
; 		l_y=(dir)?7:(-7);
			; SOURCE LINE # 65
	MOV  	DPTR,#dir?158
	MOVX 	A,@DPTR
	JZ   	?C0017
	MOV  	R7,#07H
	SJMP 	?C0018
?C0017:
	MOV  	R7,#0F9H
?C0018:
	MOV  	DPTR,#l_y?156
	MOV  	A,R7
	MOVX 	@DPTR,A
; 
; 		for(;x0<x;x0+=8)
			; SOURCE LINE # 67
?C0019:
	MOV  	DPTR,#x?144
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R7,A
	CLR  	C
	SUBB 	A,R6
	JNC  	?C0020
; 		{
			; SOURCE LINE # 68
; 			framebuf_update(x0,y0,x0+7,y0+l_y,tmp_buf);
			; SOURCE LINE # 69
	PUSH 	AR7
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	A,R7
	ADD  	A,#07H
	MOV  	R3,A
	MOV  	DPTR,#l_y?156
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	A,R5
	ADD  	A,R6
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
	POP  	AR7
	LCALL	_framebuf_update
; 			y0 +=l_y+1;
			; SOURCE LINE # 70
	MOV  	DPTR,#l_y?156
	MOVX 	A,@DPTR
	INC  	A
	MOV  	R7,A
	MOV  	DPTR,#y0?143
	MOVX 	A,@DPTR
	ADD  	A,R7
	MOVX 	@DPTR,A
; 		}
			; SOURCE LINE # 71
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	ADD  	A,#08H
	MOVX 	@DPTR,A
	SJMP 	?C0019
?C0020:
; 
; 		x0=x0-7;
			; SOURCE LINE # 73
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	ADD  	A,#0F9H
	MOVX 	@DPTR,A
; 		y0=y0-7;
			; SOURCE LINE # 74
	INC  	DPTR
	MOVX 	A,@DPTR
	ADD  	A,#0F9H
	MOVX 	@DPTR,A
; 		framebuf_update(x0,y0,x,y,tmp_buf);
			; SOURCE LINE # 75
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	DPTR,#y?145
	MOVX 	A,@DPTR
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
	MOV  	DPTR,#x?144
	MOVX 	A,@DPTR
	MOV  	R3,A
; 	}
			; SOURCE LINE # 76
	AJMP 	?C0066
?C0009:
; 	else if(x_l>y_l)
			; SOURCE LINE # 77
	MOV  	DPTR,#y_l?151
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#x_l?150
	MOVX 	A,@DPTR
	MOV  	R6,A
	SETB 	C
	SUBB 	A,R7
	JNC  	$ + 4H
	AJMP 	?C0023
; 	{
			; SOURCE LINE # 78
; 		residue=y_l%x_l;
			; SOURCE LINE # 79
	MOV  	A,R7
	MOV  	B,R6
	DIV  	AB
	MOV  	residue?146,B
; 		yn=0;
			; SOURCE LINE # 80
	CLR  	A
	MOV  	DPTR,#yn?149
	MOVX 	@DPTR,A
; 		l_y=yn;
			; SOURCE LINE # 81
	MOV  	DPTR,#l_y?156
	MOVX 	@DPTR,A
; 		z=0;
			; SOURCE LINE # 82
	MOV  	DPTR,#z?152
	MOVX 	@DPTR,A
; 
; 		for(i=1;i<x_l;i++)
			; SOURCE LINE # 84
	MOV  	DPTR,#i?157
	INC  	A
	MOVX 	@DPTR,A
?C0024:
	MOV  	DPTR,#x_l?150
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	CLR  	C
	SUBB 	A,R7
	JC   	$ + 4H
	AJMP 	?C0025
; 		{
			; SOURCE LINE # 85
; 			tmp_buf[l_y] |=last;
			; SOURCE LINE # 86
	MOV  	DPTR,#l_y?156
	MOVX 	A,@DPTR
	ADD  	A,#LOW (tmp_buf)
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf)
	MOV  	DPH,A
	PUSH 	DPH
	PUSH 	DPL
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	A,R6
	ORL  	A,R5
	POP  	DPL
	POP  	DPH
	MOVX 	@DPTR,A
; 			z +=residue;
			; SOURCE LINE # 87
	MOV  	DPTR,#z?152
	MOVX 	A,@DPTR
	ADD  	A,residue?146
	MOVX 	@DPTR,A
; 			if(z-x_l>0)
			; SOURCE LINE # 88
	MOVX 	A,@DPTR
	CLR  	C
	SUBB 	A,R7
	MOV  	R7,A
	SETB 	C
	SUBB 	A,#00H
	JC   	?C0027
; 			{
			; SOURCE LINE # 89
; 				z=z-x_l;
			; SOURCE LINE # 90
	MOV  	A,R7
	MOVX 	@DPTR,A
; 				carry=1;
			; SOURCE LINE # 91
	MOV  	carry?147,#01H
; 			}
			; SOURCE LINE # 92
	SJMP 	?C0028
?C0027:
; 			else carry=0;
			; SOURCE LINE # 93
	CLR  	A
	MOV  	carry?147,A
?C0028:
; 			yn +=carry;
			; SOURCE LINE # 94
	MOV  	DPTR,#yn?149
	MOVX 	A,@DPTR
	ADD  	A,carry?147
	MOVX 	@DPTR,A
; 
; 			last=last>>1;
			; SOURCE LINE # 96
	MOV  	A,R5
	CLR  	C
	RRC  	A
	MOV  	DPTR,#last?155
	MOVX 	@DPTR,A
; 			if(!last)
			; SOURCE LINE # 97
	JNZ  	?C0029
; 			{
			; SOURCE LINE # 98
; 				l_y=yn-1;
			; SOURCE LINE # 99
	MOV  	DPTR,#yn?149
	MOVX 	A,@DPTR
	DEC  	A
	MOV  	DPTR,#l_y?156
	MOVX 	@DPTR,A
; 				l_y=(dir)?l_y:(l_y+1);
			; SOURCE LINE # 100
	MOV  	DPTR,#dir?158
	MOVX 	A,@DPTR
	MOV  	DPTR,#l_y?156
	JZ   	?C0030
	MOVX 	A,@DPTR
	MOV  	R7,A
	SJMP 	?C0031
?C0030:
	MOVX 	A,@DPTR
	INC  	A
	MOV  	R7,A
?C0031:
	MOV  	DPTR,#l_y?156
	MOV  	A,R7
	MOVX 	@DPTR,A
	MOV  	R6,A
; 				last=0x80;
			; SOURCE LINE # 101
	MOV  	DPTR,#last?155
	MOV  	A,#080H
	MOVX 	@DPTR,A
; 				framebuf_update(x0,y0,x0,y0+l_y,tmp_buf);
			; SOURCE LINE # 102
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R3,A
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	ADD  	A,R6
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
	LCALL	_framebuf_update
; 				x0=i;
			; SOURCE LINE # 103
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	MOV  	DPTR,#x0?142
	MOVX 	@DPTR,A
; 				y0=yn;
			; SOURCE LINE # 104
	MOV  	DPTR,#yn?149
	MOVX 	A,@DPTR
	MOV  	DPTR,#y0?143
	MOVX 	@DPTR,A
; 				clr_buf(8);
			; SOURCE LINE # 105
	MOV  	R7,#08H
	LCALL	_clr_buf
; 			}
			; SOURCE LINE # 106
?C0029:
; 
; 			if(z>=(x_l>>1))
			; SOURCE LINE # 108
	MOV  	DPTR,#x_l?150
	MOVX 	A,@DPTR
	CLR  	C
	RRC  	A
	MOV  	R7,A
	MOV  	DPTR,#z?152
	MOVX 	A,@DPTR
	CLR  	C
	SUBB 	A,R7
	MOV  	DPTR,#yn?149
	MOVX 	A,@DPTR
	JC   	?C0032
; 				l_y=1+yn;
			; SOURCE LINE # 109
	INC  	A
	SJMP 	?C0063
?C0032:
; 			else l_y=yn;
			; SOURCE LINE # 110
?C0063:
	MOV  	DPTR,#l_y?156
	MOVX 	@DPTR,A
; 		}
			; SOURCE LINE # 111
?C0026:
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	INC  	A
	MOVX 	@DPTR,A
	AJMP 	?C0024
?C0025:
; 		tmp_buf[l_y] |=last;
			; SOURCE LINE # 112
	MOV  	DPTR,#l_y?156
	MOVX 	A,@DPTR
	ADD  	A,#LOW (tmp_buf)
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf)
	MOV  	DPH,A
	PUSH 	DPH
	PUSH 	DPL
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	A,R7
	ORL  	A,R6
	POP  	DPL
	POP  	DPH
	MOVX 	@DPTR,A
; 		l_y=(dir)?(yn-1):(~yn+2);
			; SOURCE LINE # 113
	MOV  	DPTR,#dir?158
	MOVX 	A,@DPTR
	MOV  	DPTR,#yn?149
	JZ   	?C0034
	MOVX 	A,@DPTR
	DEC  	A
	MOV  	R7,A
	SJMP 	?C0035
?C0034:
	MOVX 	A,@DPTR
	CPL  	A
	ADD  	A,#02H
	MOV  	R7,A
?C0035:
	MOV  	DPTR,#l_y?156
	MOV  	A,R7
	MOVX 	@DPTR,A
	MOV  	R6,A
; 		framebuf_update(x0,y0,x0,y0+l_y,tmp_buf);
			; SOURCE LINE # 114
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R3,A
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	ADD  	A,R6
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
?C0065:
; 	}
			; SOURCE LINE # 115
	AJMP 	?C0066
?C0023:
; 	else
; 	{
			; SOURCE LINE # 117
; 		residue=x_l%y_l;
			; SOURCE LINE # 118
	MOV  	DPTR,#y_l?151
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#x_l?150
	MOVX 	A,@DPTR
	MOV  	B,R7
	DIV  	AB
	MOV  	residue?146,B
; 		xn=8-residue;
			; SOURCE LINE # 119
	CLR  	C
	MOV  	A,#08H
	SUBB 	A,residue?146
	MOV  	DPTR,#xn?148
	MOVX 	@DPTR,A
; 
; 		for(i=1;i<y_l;i++)
			; SOURCE LINE # 121
	MOV  	DPTR,#i?157
	MOV  	A,#01H
	MOVX 	@DPTR,A
?C0037:
	MOV  	DPTR,#y_l?151
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	MOV  	R6,A
	CLR  	C
	SUBB 	A,R7
	JC   	$ + 4H
	AJMP 	?C0038
; 		{
			; SOURCE LINE # 122
; 			yn=last;
			; SOURCE LINE # 123
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	DPTR,#yn?149
	MOVX 	@DPTR,A
; 			tmp_buf[i-1] |=yn;
			; SOURCE LINE # 124
	MOV  	A,#LOW (tmp_buf+0FFFFH)
	ADD  	A,R6
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf+0FFFFH)
	MOV  	DPH,A
	MOVX 	A,@DPTR
	ORL  	A,R5
	MOVX 	@DPTR,A
; 			
; 			z +=residue;
			; SOURCE LINE # 126
	MOV  	DPTR,#z?152
	MOVX 	A,@DPTR
	ADD  	A,residue?146
	MOVX 	@DPTR,A
; 			if(z-y_l>0)
			; SOURCE LINE # 127
	MOVX 	A,@DPTR
	CLR  	C
	SUBB 	A,R7
	MOV  	R7,A
	SETB 	C
	SUBB 	A,#00H
	JC   	?C0040
; 			{
			; SOURCE LINE # 128
; 				z=z-y_l;
			; SOURCE LINE # 129
	MOV  	A,R7
	MOVX 	@DPTR,A
; 				carry=1; 
			; SOURCE LINE # 130
	MOV  	carry?147,#01H
; 			}
			; SOURCE LINE # 131
	SJMP 	?C0041
?C0040:
; 			else carry=0;
			; SOURCE LINE # 132
	CLR  	A
	MOV  	carry?147,A
?C0041:
; 			last=last>>carry;
			; SOURCE LINE # 133
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	R6,carry?147
	MOV  	R0,AR6
	INC  	R0
	SJMP 	?C0062
?C0061:
	CLR  	C
	RRC  	A
?C0062:
	DJNZ 	R0,?C0061
	MOV  	DPTR,#last?155
	MOVX 	@DPTR,A
; 			if(z>=(y_l>>1))
			; SOURCE LINE # 134
	MOV  	DPTR,#y_l?151
	MOVX 	A,@DPTR
	CLR  	C
	RRC  	A
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	CLR  	C
	SUBB 	A,R7
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	JC   	?C0042
; 			{
			; SOURCE LINE # 135
; 				yn=last>>1;
			; SOURCE LINE # 136
	RRC  	A
; 			}
			; SOURCE LINE # 137
	SJMP 	?C0064
?C0042:
; 			else yn=last;
			; SOURCE LINE # 138
?C0064:
	MOV  	DPTR,#yn?149
	MOVX 	@DPTR,A
?C0043:
; 			if(!last)
			; SOURCE LINE # 139
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	JNZ  	?C0039
; 			{
			; SOURCE LINE # 140
; 				l_y=(dir)?(i-1):(~i+2);
			; SOURCE LINE # 141
	MOV  	DPTR,#dir?158
	MOVX 	A,@DPTR
	MOV  	DPTR,#i?157
	JZ   	?C0045
	MOVX 	A,@DPTR
	DEC  	A
	MOV  	R7,A
	SJMP 	?C0046
?C0045:
	MOVX 	A,@DPTR
	CPL  	A
	ADD  	A,#02H
	MOV  	R7,A
?C0046:
	MOV  	DPTR,#l_y?156
	MOV  	A,R7
	MOVX 	@DPTR,A
	MOV  	R6,A
; 				last=0x80;
			; SOURCE LINE # 142
	MOV  	DPTR,#last?155
	MOV  	A,#080H
	MOVX 	@DPTR,A
; 				framebuf_update(x0,y0,x0,y0+l_y,tmp_buf);
			; SOURCE LINE # 143
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R3,A
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	ADD  	A,R6
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
	LCALL	_framebuf_update
; 				y0=i;
			; SOURCE LINE # 144
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	MOV  	DPTR,#y0?143
	MOVX 	@DPTR,A
; 				x0+=xn;
			; SOURCE LINE # 145
	MOV  	DPTR,#xn?148
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	ADD  	A,R7
	MOVX 	@DPTR,A
; 				xn=8;
			; SOURCE LINE # 146
	MOV  	DPTR,#xn?148
	MOV  	A,#08H
	MOVX 	@DPTR,A
; 				clr_buf(8);
			; SOURCE LINE # 147
	MOV  	R7,A
	LCALL	_clr_buf
; 			}
			; SOURCE LINE # 148
; 		}
			; SOURCE LINE # 149
?C0039:
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	INC  	A
	MOVX 	@DPTR,A
	AJMP 	?C0037
?C0038:
; 		tmp_buf[i-1] |=last;
			; SOURCE LINE # 150
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	MOV  	R7,A
	ADD  	A,#LOW (tmp_buf+0FFFFH)
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf+0FFFFH)
	MOV  	DPH,A
	PUSH 	DPH
	PUSH 	DPL
	MOVX 	A,@DPTR
	MOV  	R6,A
	MOV  	DPTR,#last?155
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	A,R6
	ORL  	A,R5
	POP  	DPL
	POP  	DPH
	MOVX 	@DPTR,A
; 		l_y=(dir)?(i-1):(~i+2);
			; SOURCE LINE # 151
	MOV  	DPTR,#dir?158
	MOVX 	A,@DPTR
	JZ   	?C0047
	MOV  	A,R7
	DEC  	A
	MOV  	R7,A
	SJMP 	?C0048
?C0047:
	MOV  	DPTR,#i?157
	MOVX 	A,@DPTR
	CPL  	A
	ADD  	A,#02H
	MOV  	R7,A
?C0048:
	MOV  	DPTR,#l_y?156
	MOV  	A,R7
	MOVX 	@DPTR,A
	MOV  	R6,A
; 		framebuf_update(x0,y0,x0,y0+l_y,tmp_buf);
			; SOURCE LINE # 152
	MOV  	DPTR,#x0?142
	MOVX 	A,@DPTR
	MOV  	R3,A
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	ADD  	A,R6
	MOV  	DPTR,#?_framebuf_update?BYTE+03H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#01H
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#HIGH (tmp_buf)
	MOVX 	@DPTR,A
	INC  	DPTR
	MOV  	A,#LOW (tmp_buf)
	MOVX 	@DPTR,A
?C0066:
	LCALL	_framebuf_update
; 	}
			; SOURCE LINE # 153
?C0022:
; 	screen_update(x1,y1,x,y);	
			; SOURCE LINE # 154
	MOV  	DPTR,#x1?153
	MOVX 	A,@DPTR
	MOV  	R7,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	R5,A
	MOV  	DPTR,#x?144
	MOVX 	A,@DPTR
	MOV  	R3,A
	INC  	DPTR
	MOVX 	A,@DPTR
	MOV  	DPTR,#?_screen_update?BYTE+03H
	MOVX 	@DPTR,A
	LJMP 	_screen_update
; END OF _l_math

; }
; 
; void c_math(unsigned char r)

	RSEG  ?PR?_c_math?GMATH
_c_math:
	USING	0
			; SOURCE LINE # 157
;---- Variable 'r?259' assigned to Register 'R1' ----
	MOV  	R1,AR7
; {
			; SOURCE LINE # 158
; 	unsigned char xdata xn,yn;
; 	unsigned char data r2,l_xn2,tmp2;
; 	unsigned char xdata l_y,l_y2,yn2,last;
; 
; 	r2=r*r-1;
			; SOURCE LINE # 163
	MOV  	A,R1
	MOV  	B,A
	MUL  	AB
	DEC  	A
	MOV  	r2?262,A
; 	l_xn2=0;
			; SOURCE LINE # 164
	CLR  	A
	MOV  	l_xn2?263,A
; 	yn=r;
			; SOURCE LINE # 165
;---- Variable 'yn?261' assigned to Register 'R7' ----
; 	l_y2=r2+1;
			; SOURCE LINE # 166
	MOV  	A,r2?262
	INC  	A
	MOV  	DPTR,#l_y2?266
	MOVX 	@DPTR,A
; 	last=0x80;
			; SOURCE LINE # 167
	INC  	DPTR
	MOV  	A,#080H
	MOVX 	@DPTR,A
; 	
; 	for(xn=1;xn<(r+1);xn++)
			; SOURCE LINE # 169
;---- Variable 'xn?260' assigned to Register 'R6' ----
	MOV  	R6,#01H
?C0050:
	MOV  	A,R1
	ADD  	A,#01H
	MOV  	R5,A
	CLR  	A
	RLC  	A
	MOV  	R4,A
	MOV  	A,R6
	CLR  	C
	SUBB 	A,R5
	MOV  	A,R4
	XRL  	A,#080H
	MOV  	R0,A
	MOV  	A,#080H
	SUBB 	A,R0
	JNC  	?C0058
; 	{
			; SOURCE LINE # 170
; 		l_y=yn;
			; SOURCE LINE # 171
;---- Variable 'l_y?265' assigned to Register 'R5' ----
	MOV  	R5,AR7
; 		tmp_buf[l_y]=last;
			; SOURCE LINE # 172
	MOV  	DPTR,#last?268
	MOVX 	A,@DPTR
	MOV  	R7,A
	MOV  	A,#LOW (tmp_buf)
	ADD  	A,R5
	MOV  	DPL,A
	CLR  	A
	ADDC 	A,#HIGH (tmp_buf)
	MOV  	DPH,A
	MOV  	A,R7
	MOVX 	@DPTR,A
; 
; 		tmp2=r2-l_xn2-((xn-1)<<1);
			; SOURCE LINE # 174
	MOV  	A,R6
	DEC  	A
	ADD  	A,ACC
	MOV  	R7,A
	CLR  	C
	MOV  	A,r2?262
	SUBB 	A,l_xn2?263
	CLR  	C
	SUBB 	A,R7
	MOV  	tmp2?264,A
; 		yn=l_y-1;
			; SOURCE LINE # 175
	MOV  	A,R5
	DEC  	A
	MOV  	R7,A
; 		yn2=yn*yn;
			; SOURCE LINE # 176
	MOV  	B,A
	MUL  	AB
	MOV  	R4,A
;---- Variable 'yn2?267' assigned to Register 'R4' ----
; 		if(ABSUB(l_y,tmp2)>ABSUB(yn2,tmp2))
			; SOURCE LINE # 177
	SETB 	C
	SUBB 	A,tmp2?264
	JC   	?C0054
	MOV  	A,R4
	SUBB 	A,tmp2?264
	MOV  	R3,A
	SJMP 	?C0055
?C0054:
	CLR  	C
	MOV  	A,tmp2?264
	SUBB 	A,R4
	MOV  	R3,A
?C0055:
	MOV  	A,R5
	SETB 	C
	SUBB 	A,tmp2?264
	JC   	?C0056
	MOV  	A,R5
	SUBB 	A,tmp2?264
	MOV  	R2,A
	SJMP 	?C0057
?C0056:
	CLR  	C
	MOV  	A,tmp2?264
	SUBB 	A,R5
	MOV  	R2,A
?C0057:
	MOV  	A,R2
	SETB 	C
	SUBB 	A,R3
	JC   	?C0052
; 		{
			; SOURCE LINE # 178
; 			l_y=yn;
			; SOURCE LINE # 179
; 			l_y2=yn2;	
			; SOURCE LINE # 180
	MOV  	DPTR,#l_y2?266
	MOV  	A,R4
	MOVX 	@DPTR,A
; 		}
			; SOURCE LINE # 181
; 
; 	}	
			; SOURCE LINE # 183
?C0052:
	INC  	R6
	SJMP 	?C0050
; }
			; SOURCE LINE # 184
?C0058:
	RET  	
; END OF _c_math

	END
